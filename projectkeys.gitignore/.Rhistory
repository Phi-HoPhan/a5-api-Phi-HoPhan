google.key <- AIzaSyCYiTk6sTVkSkl5srdoSq0HelZ5aTV1iGQ
propublica.key <- bkpTd5DuM6W15Xiaa1Q600pk7qm2Z2qxN3qAVMWx
google.key <- "AIzaSyCYiTk6sTVkSkl5srdoSq0HelZ5aTV1iGQ"
propublica.key <- "bkpTd5DuM6W15Xiaa1Q600pk7qm2Z2qxN3qAVMWx"
install.packages("httr")
install.packages("jsonlite")
library(httr)
library(jsonlite)
setwd("~/../Desktop/Info_201/a5-api-Phi-HoPhan/projectkeys.gitignore")
source('keys.R')
print(google.key)
print(propublica.key)
google.key <- google.key
response.gcp <- GET("https://www.googleapis.com/civicinfo/v2/representatives", api_key=google.key)
body <- content(response.gcp, "text")
result <- fromJSON(body)
result
response.gcp <- httr::GET("https://www.googleapis.com/civicinfo/v2/representatives", api_key=google.key)
body <- content(response.gcp, "text")
result <- fromJSON(body)
result
response.gcp <- httr::GET("https://www.googleapis.com/civicinfo/v2/representatives", key=google.key)
body <- content(response.gcp, "text")
result <- fromJSON(body)
result
response.gcp <- GET("https://www.googleapis.com/civicinfo/v2/representatives", key=google.key)
body <- content(response.gcp, "text")
result <- fromJSON(body)
result
API_KEY <- google.key
response.gcp <- GET("https://www.googleapis.com/civicinfo/v2/representatives", key=API_KEY)
body <- content(response.gcp, "text")
body <- content(response.gcp, "text")
result
API_KEY <- AIzaSyBvG7s09XIiVyu0MURaVsDU51iqNvl27wM
API_KEY <- "AIzaSyBvG7s09XIiVyu0MURaVsDU51iqNvl27wM"
response.gcp <- GET("https://www.googleapis.com/civicinfo/v2/representatives", key=API_KEY)
body <- content(response.gcp, "text")
result <- fromJSON(body)
result
response.gcp <- httr::GET("https://www.googleapis.com/civicinfo/v2/representatives", key=API_KEY)
body <- content(response.gcp, "text")
result <- fromJSON(body)
result
google.key <- "AIzaSyBvG7s09XIiVyu0MURaVsDU51iqNvl27wM"
API_KEY <- google.key
response.gcp <- httr::GET("https://www.googleapis.com/civicinfo/v2/representatives?key=API_KEY")
body <- content(response.gcp, "text")
result <- fromJSON(body)
result
response.gcp <- httr::GET(paste0("https://www.googleapis.com/civicinfo/v2/representatives?", key=API_KEY)
response.gcp <- httr::GET(paste0("https://www.googleapis.com/civicinfo/v2/representatives?", key=API_KEY))
response.gcp <- httr::GET(paste0("https://www.googleapis.com/civicinfo/v2/representatives", key=API_KEY))
body <- content(response.gcp, "text")
result <- fromJSON(body)
result
response.gcp <- httr::GET(paste0("https://www.googleapis.com/civicinfo/v2/representatives?key=", key=API_KEY))
body <- content(response.gcp, "text")
result <- fromJSON(body)
result
query.params <- (query="representatives", api_key=API_KEY)
query.params <- list(query=representatives, api_key=API_KEY)
query.params <- list(query=representatives, api_key=API_KEY)
query.params <- list(q=representatives, api_key=API_KEY)
query.params <- list(q="representatives", api_key=API_KEY)
query.params <- list(q="representatives", api_key=API_KEY)
response.gcp <- GET(paste0("https://www.googleapis.com/civicinfo/v2/", query=query.params))
query.params <- list(q="/representatives", api_key=API_KEY)
response.gcp <- GET(paste0("https://www.googleapis.com/civicinfo/v2", query=query.params))
response.gcp <- GET("https://www.googleapis.com/civicinfo/v2", query=query.params)
body <- content(response.gcp, "text")
result <- fromJSON(body)
response <- GET("https://www.googleapis.com/civicinfo/v2", query=query.params)
body <- content(response, "text")
result <- fromJSON(body)
body <- content(response, "text")
result <- fromJSON(body)
body <- content(response, "text")
result <- fromJSON(body)
result
response <- GET("https://www.googleapis.com/civicinfo/v2", query = query.params)
body <- content(response, "text")
result <- fromJSON(body)
query.params <- list(api_key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = query.params)
body <- content(response, "text")
result <- fromJSON(body)
result
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives?key=", query = query.params)
body <- content(response, "text")
result <- fromJSON(body)
result
response <- GET("https://developers.google.com/civic-information/docs/v2/representatives/representativeInfoByAddress",
query = query.params)
body <- content(response, "text")
result <- fromJSON(body)
query.params <- list(q = "/representativeInfoByAddress", api_key=API_KEY)
response <- GET("https://developers.google.com/civic-information/docs/v2/representatives",
query = query.params)
body <- content(response, "text")
result <- fromJSON(body)
base <- ("https://developers.google.com/civic-information/docs/v2/representatives")
query.params <- list(q = "/representativeInfoByAddress", api_key=API_KEY)
uri <- paste0(base, query.params)
response <- GET(uri)
response <- httr::GET(uri)
response <- GET(base, query=query.params)
body <- content(response, "text")
result <- fromJSON(body)
query.params <- list(q = "/seattle", api_key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query=query.params)
body <- content(response, "text")
result <- fromJSON(body)
result
base <- ("https://www.googleapis.com/civicinfo/v2/representatives/")
query.params <- list(q =seattle, api_key=API_KEY)
response <- GET(base, query=query.params)
body <- content(response, "text")
result <- fromJSON(body)
result
query.params <- list(adress="seattle", api_key=API_KEY)
response <- GET(base, query=query.params)
body <- content(response, "text")
result
query.params <- list(adress="5612B 15th Ave Ne Seattle WA 98105", api_key=API_KEY)
response <- GET(base, query=query.params)
body <- content(response, "text")
result <- fromJSON(body)
result
query.params <- list(address="5612B 15th Ave Ne Seattle WA 98105", api_key=API_KEY)
base <- ("https://www.googleapis.com/civicinfo/v2/representatives/?")
query.params <- list(address="seattle", api_key=API_KEY)
response <- GET(base, query=query.params)
body <- content(response, "text")
result <- fromJSON(body)
result
base <- ("https://www.googleapis.com/civicinfo/v2/representatives/")
query.params <- list(q="seattle", api_key=API_KEY)
uri <- paste0(base, query.params)
response <- GET(uri)
base <- ("https://www.googleapis.com/civicinfo/v2/representatives/")
query.params <- list(q="seattle", api_key=API_KEY)
uri <- paste0(base, query.params)
response <- GET(uri)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives/seattle", api_key=API_KEY)
body <- content(response, "text")
result <- fromJSON(body)
result
print(API_KEY)
query.param <- (q=seattle, key=API_KEY)
query.param <- (q="seattle", key=API_KEY)
query.param <- (q="seattle", key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query.param)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = query.param)
query.param <- (q="seattle", key=API_KEY)
query.param <- list(q="seattle", key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
result$error
query.param <- list(q="5612B 15th Ave Ne&seattle&WA&98105", key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
result$error
result
query.param <- list(q="5612B 15th Ave Ne seattle WA 98105", key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
result
query.param <- list(address="5612B 15th Ave Ne seattle WA 98105", key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
result
query.param <- list(q="5612B 15th Ave Ne seattle WA 98105", key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
result
query.param <- list(address="5612B 15th Ave Ne seattle WA 98105", key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
result
is.data.frame(result)##    Note: you can submit the requests through your browser.  If unsure, or if
flatten(result)
result
is.data.frame(result)
results <- flatten(result)
is.data.frame(results)
is.data.frame(results)
results <- flatten(result)
result <- flatten(result)
result <- flatten(result)
result.df <- flatten(result)
query.param <- list(address="5612B 15th Ave Ne seattle WA 98105", key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
result.df <- flatten(result)
View(result)
representatives <- flatten(result$officials)
representatives
view(representatives)
View(representatives)
officials <- flatten(result$officials)
View(officials)
offices <- flatten(result$offices)
View(offices)
install.packages("dplyr")
library(dplyr)
merged.office.officials <- left_join(offices, officials)
View(merged.office.officials)
merged.office.officials <- full_join(offices, officials)
View(merged.office.officials)
merged.office.officials <- full_join(offices, officials, by=column)
keyed.officials <- mutate(officials, key=col(x, as.factor = FALSE))
keyed.officials <- mutate(officials, key=col(1, as.factor = FALSE))
merged.office.officials <- full_join(offices, officials, by=indice)
merged.office.officials <- full_join(offices, officials, by="indice")
merged.office.officials <- full_join(offices, officials, by="column 0")
merged.office.officials <- full_join(offices, officials, by=column 0)
merged.office.officials <- full_join(offices, officials, by=column)
merged.office.officials <- left_join(offices, officials)
View(merged.office.officials)
merged.office.officials <- left_join(x=offices, y=officials)
View(merged.office.officials)
merged.office.officials <- full_join(x=offices, y=officials, copy=TRUE)
View(merged.office.officials)
merged.office.officials <- left_join(x=offices, y=officials, copy=TRUE)
View(merged.office.officials)
merged.office.officials <- left_join(x=offices, y=officials, by= c("name" = "name"))
View(merged.office.officials)
merged.office.officials <- full_join(x=offices, y=officials, by= c("name" = "name"))
View(merged.office.officials)
merged.office.officials <- full_join(x=offices, y=officials, by= c("name" = "urls"))
merged.office.officials <- full_join(x=offices, y=officials, by= c("name" = "party"))
View(merged.office.officials)
merged.office.officials <- full_join(x=offices, y=officials, by= c("officialindices" = indices))
merged.office.officials <- full_join(x=offices, y=officials, by= c("officialindices" = rows))
merged.office.officials <- full_join(x=offices, y=officials, by=0))
merged.office.officials <- full_join(x=offices, y=officials, by="rownames")
merged.office.officials <- full_join(x=offices, y=officials, by="row.names")
merged.office.officials <- full_join(x=offices, y=officials, by=0, all=TRUE)
merged.office.officials <- full_join(x=offices, y=officials, by=c(row.names = "oficialindices"))
keyed.officials <- mutate(officials, key=list([0:27]))
keyed.officials <- mutate(officials, key=list(0:27))
View(officials)
View(keyed.officials)
keyed.officials <- mutate(officials, key=list[0:27]
View(keyed.officials)
keyed.officials <- mutate(officials, key=list[0:27])
keyed.officials <- mutate(officials, key=row_number())
View(keyed.officials)
keyed.officials <- mutate(officials, key=row_number()-1)
View(keyed.officials)
merged.office.officials <- full_join(x=offices, y=keyed.officials, by=c("oficialindices" = "key"))
merged.office.officials <- full_join(x=offices, y=keyed.officials, by=c("officialindices" = "key"))
merged.office.officials <- full_join(x=offices, y=keyed.officials, by=c("officialIndices" = "key"))
keyed.officials <- mutate(officials, key= c(row_number()-1))
View(keyed.officials)
merged.office.officials <- full_join(x=offices, y=keyed.officials, by=c(as.numeric("officialIndices") = "key"))
keyed.officials <- mutate(officials, key= c(row_number()-1))
View(keyed.officials)
keyed.officials$key = as.numeric(as.character(keyed.officials$key))
View(keyed.officials)
offices <- flatten(result$offices)
View(offices)
merged.office.officials <- full_join(x=offices, y=keyed.officials, by=c("officialIndices" = "key"))
keyed.officials$key = as.list(as.character(keyed.officials$key))
merged.office.officials <- full_join(x=offices, y=keyed.officials, by=c("officialIndices" = "key"))
offices$officialIndices = as.numeric(as.character(offices$officialIndices))
View(offices)
View(merged.office.officials)
merged.office.officials <- left_join(x=offices, y=keyed.officials, by=c("officialIndices" = "key"))
officials <- flatten(result$officials)
View(officials)
keyed.officials <- mutate(officials, key= c(row_number()-1))
View(keyed.officials)
offices <- flatten(result$offices)
View(offices)
merged.office.officials <- left_join(x=offices, y=keyed.officials, by=c("officialIndices" = "key"))
View(merged.office.officials)
merged.office.officials <- full_join(x=offices, y=keyed.officials, by=c("officialIndices" = "key"))
View(keyed.officials)
View(offices)
offices$officialIndices = as.numeric(offices$officialIndices)
offices$officialIndices = unlist(offices$officialIndices)
View(offices)
merged.office.officials <- merge(x=offices, y=keyed.officials, by=c("officialIndices" = "key"))
keyed.officials$key = as.list(keyed.officials$key)
merged.office.officials <- merge(offices, keyed.officials, by=c("officialIndices" = "key"))
merged.office.officials <- merge(offices, keyed.officials, by=c("officialIndices", "key"))
merged.office.officials <- merge(offices, keyed.officials, by=c("officialIndices", "key"))
merged.office.officials <- merge(offices, keyed.officials, by.x=c("officialIndices"), by.y = ("key"))
merged.office.officials <- merge(offices, keyed.officials, by.x=c("officialIndices", "key"), by.y = ("key", "officialIndices"))
merged.office.officials <- merge(offices, keyed.officials, by.x=c("officialIndices", "key"), by.y = ("key"))
merged.office.officials <- merge(offices, keyed.officials, by.x=c("officialIndices"), by.y = ("key"))
officials <- flatten(result$officials)
View(officials)
keyed.officials <- mutate(officials, key= c(row_number()-1))
keyed.officials$key = as.list(keyed.officials$key)
View(keyed.officials)
offices <- flatten(result$offices)
View(offices)
merged.office.officials <- merge(offices, keyed.officials, by.x=c("officialIndices"), by.y = ("key"))
View(merged.office.officials)
offices$officialIndices = as.numeric(unlist(offices$officialIndices))
offices <- flatten(result$offices)
merged.office.officials <- right_join(offices, keyed.officials, by=c("officialIndices" = "key"))
merged.office.officials <- left_join(offices, keyed.officials, by=c("officialIndices" = "key"))
lapply(offices$officialIndices, as.numeric)
keyed.officials <- mutate(officials, key= c(row_number()-1))
merged.office.officials <- left_join(offices, keyed.officials, by=c("officialIndices" = "key"))
keyed.officials <- mutate(officials, key= c(row_number()-1))
merged.office.officials <- left_join(offices, keyed.officials, by=c("officialIndices" = "key"))
setwd("~/../Desktop/Info_201/a5-api-Phi-HoPhan/projectkeys.gitignore")
source('keys.R')
API_KEY <- google.key
query.param <- list(address="5612B 15th Ave Ne seattle WA 98105", key=API_KEY)
response <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
View(result)
officials <- flatten(result$officials)
View(officials)
keyed.officials <- mutate(officials, key= c(row_number()-1))
View(keyed.officials)
offices <- flatten(result$offices)
lapply(offices$officialIndices, as.numeric)
View(offices)
merged.office.officials <- left_join(offices, keyed.officials, by=c("officialIndices" = "key"))
View(merged.office.officials)
keyed.officials <- mutate(officials, key= as.numeric(c(row_number()-1)))
merged.office.officials <- left_join(offices, keyed.officials, by=c("officialIndices" = "key"))
keyed.officials <- mutate(officials, key= c(row_number()-1))
keyed.officials$key = as.numeric(keyed.officials$key)
merged.office.officials <- left_join(offices, keyed.officials, by=c("officialIndices" = "key"))
lapply(keyed.officials$key, as.numeric)
merged.office.officials <- left_join(offices, keyed.officials, by=c("officialIndices" = "key"))
View(keyed.officials)
offices$officialIndices[3] <- lapply(offices$officialIndices[3], as.numeric)
offices$officialIndices[8] <- lapply(offices$officialIndices[8], as.numeric)
View(offices)
merged.office.officials <- left_join(offices, keyed.officials, by=c("officialIndices" = "key"))
lapply(keyed.officials$key[1:28], as.numeric)
keyed.officials$key[1:28] <- lapply(keyed.officials$key[1:28], as.numeric)
View(keyed.officials)
merged.office.officials <- left_join(offices, keyed.officials, by=c("officialIndices" = "key"))
merged.office.officials <- left_join(offices, keyed.officials, by=c("officialIndices" = "key"))
offices <- flatten(result$offices)
offices <- flatten(result$offices)
offices <- flatten(result$offices)
View(offices)
install.packages("tidyr")
library(tidyr)
unlisted.offices <- unnest(offices, officialIndices)
View(unlisted.offices)
merged.office.officials <- left_join(unlisted.offices, keyed.officials, by=c("officialIndices" = "key"))
keyed.officials$key <- as.numeric(keyed.officials$key)
merged.office.officials <- left_join(unlisted.offices, keyed.officials, by=c("officialIndices" = "key"))
View(merged.office.officials)
merged.office.officials <- left_join(keyed.officials, unlisted.offices, by=c("key" = "officialIndices"))
View(merged.office.officials)
merged.office.officials <- select(merged.office.officials, name, position, party, email, phones, photourl)
merged.office.officials <- full_join(keyed.officials, unlisted.offices, by=c("key" = "officialIndices"))
View(merged.office.officials)
merged.office.officials <- select(merged.office.officials, name.y, name.x, party, email, phones, photourl)
merged.office.officials <- select(merged.office.officials, name.y, name.x, party, emails, phones, photourl)
merged.office.officials <- select(merged.office.officials, name.y, name.x, party, emails, phones, photoUrl)
View(merged.office.officials)
View(merged.office.officials)
View(merged.office.officials.info)
merged.office.officials.info <- select(merged.office.officials.info, name.y, name.x, party, emails, phones, photoUrl)
merged.office.officials.info <- select(merged.office.officials, name.y, name.x, party, emails, phones, photoUrl)
View(merged.office.officials.info)
merged.office.officials.info[is.na(merged.office.officials.info)] <- "-"
merged.office.officials.info[is.na(merged.office.officials.info)] <- "-"
merged.office.officials.info[merged.office.officials.info == "NULL"] <- "-"
View(merged.office.officials.info)
base.url <- "https://www.googleapis.com/civicinfo/v2/"
path <- "representatives/"
google.api.request <- paste0(base.url, path)
response <- GET(google.api.request, query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
officials <- flatten(result$officials)
base.url <- "https://www.googleapis.com/civicinfo/v2/"
path <- "representatives/"
google.api.request <- paste0(base.url, path)
query.param <- list(address="5612B 15th Ave Ne seattle WA 98105", key=API_KEY)
response <- GET(google.api.request, query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
officials <- flatten(result$officials)
keyed.officials <- mutate(officials, key= c(row_number()-1))
keyed.officials$key <- as.numeric(keyed.officials$key)
offices <- flatten(result$offices)
unlisted.offices <- unnest(offices, officialIndices)
merged.office.officials <- full_join(keyed.officials, unlisted.offices, by=c("key" = "officialIndices"))
merged.office.officials.info <- select(merged.office.officials, name.y, name.x, party, emails, phones, photoUrl)
merged.office.officials.info[is.na(merged.office.officials.info)] <- "-"
merged.office.officials.info[merged.office.officials.info == "NULL"] <- "-"
setwd("~/../Desktop/Info_201/a5-api-Phi-HoPhan/projectkeys.gitignore")
source('keys.R')
API_KEY <- google.key
base.url <- "https://www.googleapis.com/civicinfo/v2/"
path <- "representatives/"
google.api.request <- paste0(base.url, path)
query.param <- list(address="5612B 15th Ave Ne seattle WA 98105", key=API_KEY)
response <- GET(google.api.request, query = query.param)
body <- content(response, "text")
result <- fromJSON(body)
officials <- flatten(result$officials)
keyed.officials <- mutate(officials, key= c(row_number()-1))
keyed.officials$key <- as.numeric(keyed.officials$key)
offices <- flatten(result$offices)
unlisted.offices <- unnest(offices, officialIndices)
merged.office.officials <- full_join(keyed.officials, unlisted.offices, by=c("key" = "officialIndices"))
merged.office.officials.info <- select(merged.office.officials, name.y, name.x, party, emails, phones, photoUrl)
merged.office.officials.info[is.na(merged.office.officials.info)] <- "-"
merged.office.officials.info[merged.office.officials.info == "NULL"] <- "-"
View(merged.office.officials.info)
## -------------------- propublica --------------------
## 4. Get state representatives from propublica congress API
##    you need the respective API key.
X-API-Key <- propublica.key
## -------------------- propublica --------------------
## 4. Get state representatives from propublica congress API
##    you need the respective API key.
propub.key <- propublica.key
base.url2 <- "https://api.propublica.org/congress/v1/"
path2 <- "members/house/WA/current.json"
propub.api.request <- paste0(base.url2, path2)
response2 <- GET(propub.api.request, add_headers("X-API-Key" = propub.key))
body2 <- content(response2, "text")
result2 <- fromJSON(body2)
View(result2)
representatives <- flatten(result2, results)
representatives <- flatten(result2$results)
View(representatives)
hist(rnorm(100), breaks = 2)
hist(rnorm(5), breaks = 2)
install.packages("ggplot2")
library(ggplot2)
